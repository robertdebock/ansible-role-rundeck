---
# tasks file for rundeck

- name: Import assert.yml
  ansible.builtin.import_tasks:
    file: assert.yml
  run_once: true
  delegate_to: localhost

- name: Create rundeck directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
    owner: "{{ rundeck_owner }}"
    group: "{{ rundeck_owner }}"
  loop:
    - "{{ rundeck_rdeckbase }}"
    - "{{ rundeck_rdeckbase }}/etc"
    - "{{ rundeck_rdeckbase }}"

- name: Download rundeck
  ansible.builtin.get_url:
    url: "{{ rundeck_download_url }}"
    dest: "{{ rundeck_rdeckbase }}/rundeck-{{ rundeck_version }}-{{ rundeck_release_date }}.war"
    mode: "0640"
    owner: "{{ rundeck_owner }}"
    group: "{{ rundeck_owner }}"

- name: Unpack rundeck
  become: true
  become_user: "{{ rundeck_owner }}"
  ansible.builtin.command:
    cmd: "java -jar {{ rundeck_war }} --installonly"
    chdir: "{{ rundeck_rdeckbase }}"
    creates: "{{ rundeck_rdeckbase }}/server"

- name: Create rundeck service
  become: true
  ansible.builtin.import_role:
    name: robertdebock.service
  vars:
    service_list:
      - name: rundeck
        description: Rundeck
        start_command: /usr/bin/java -Xmx{{ rundeck_xmx }}m -jar rundeck-{{ rundeck_version }}-{{ rundeck_release_date }}.war
        working_directory: "{{ rundeck_rdeckbase }}"
        user_name: "{{ rundeck_owner }}"
        group_name: "{{ rundeck_owner }}"

- name: Configure rundeck properties
  ansible.builtin.lineinfile:
    dest: "{{ rundeck_rdeckbase }}/server/config/rundeck-config.properties"
    line: "{{ item.parameter }} = {{ item.value }}"
    regexp: "^{{ item.parameter }}"
    create: true
    mode: "0644"
    owner: "{{ rundeck_owner }}"
    group: "{{ rundeck_owner }}"
  loop: "{{ rundeck_config }}"
  loop_control:
    label: "{{ item.parameter }}"
  notify:
    - Restart rundeck

- name: Configure rundeck framework
  ansible.builtin.lineinfile:
    dest: "{{ rundeck_rdeckbase }}/etc/framework.properties"
    line: "{{ item.parameter }} = {{ item.value }}"
    regexp: "^{{ item.parameter }}"
    create: true
    mode: "0644"
    owner: "{{ rundeck_owner }}"
    group: "{{ rundeck_owner }}"
  loop: "{{ rundeck_framework }}"
  loop_control:
    label: "{{ item.parameter }}"
  notify:
    - Restart rundeck

- name: Configure rundeck policy
  ansible.builtin.template:
    src: admin.aclpolicy.j2
    dest: "{{ rundeck_rdeckbase }}/etc/admin.aclpolicy"
    mode: "0644"
    owner: "{{ rundeck_owner }}"
    group: "{{ rundeck_owner }}"
  notify:
    - Restart rundeck

- name: Configure rundeck profile
  ansible.builtin.template:
    src: profile.j2
    dest: "{{ rundeck_rdeckbase }}/etc/profile"
    mode: "0644"
    owner: "{{ rundeck_owner }}"
    group: "{{ rundeck_owner }}"
  notify:
    - Restart rundeck

- name: Configure rundeck default users
  ansible.builtin.template:
    src: realm.properties.j2
    dest: "{{ rundeck_rdeckbase }}/server/config/realm.properties"
    mode: "0644"
    owner: "{{ rundeck_owner }}"
    group: "{{ rundeck_owner }}"
  notify:
    - Restart rundeck

- name: "Create libext in {{ rundeck_rdeckbase }}"
  ansible.builtin.file:
    path: "{{ rundeck_rdeckbase }}/libext"
    state: directory
    mode: "0755"
    owner: "{{ rundeck_owner }}"
    group: "{{ rundeck_owner }}"

- name: Install plugins
  ansible.builtin.get_url:
    url: "{{ item }}"
    dest: "{{ rundeck_rdeckbase }}/libext"
    mode: "0640"
    owner: "{{ rundeck_owner }}"
  loop: "{{ rundeck_plugins }}"
  when:
    - rundeck_plugins is defined

- name: Start rundeck
  become: true
  ansible.builtin.service:
    name: rundeck
    state: started
    enabled: true
